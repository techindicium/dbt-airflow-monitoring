name: 'dbt_dag_monitoring'
version: '0.2.0'

require-dbt-version: [">=1.3.0", "<2.0.0"]

config-version: 2

target-path: "target"
clean-targets: ["target", "dbt_modules", "dbt_packages"]
macro-paths: ["macros"]
log-path: "logs"
seed-paths: ["seeds"] 

profile: dbt_dag_monitoring

# When using it for testing purposes, you can take out all the comments below and set to true only the sources, models and vars you want to test

# sources:
#   dbt_dag_monitoring:
#     staging:
#       adf_sources:
#         raw_adf_monitoring:
#           +enabled: false
#       databricks_workflow_sources:
#         raw_databricks_workflow_monitoring:
#           +enabled: true
#       airflow_sources:
#         raw_airflow_monitoring:
#           +enabled: false

# models:
#   dbt_dag_monitoring:
#     marts:
#       +materialized: table
#     staging:
#       adf_sources:  
#         +enabled: false
#       airflow_sources:
#         +enabled: false
#       databricks_workflow_sources:
#         +enabled: true
#       +materialized: view

# Only one type of enabled sources can be turned on at a time

# vars:
#   dbt_dag_monitoring:
#     enabled_sources: ['databricks_workflow'] #Possible values: 'airflow', 'adf' or 'databricks_workflow'
#     dag_monitoring_start_date: cast('2023-01-01' as date)
#     dag_monitoring_airflow_database: cdi_dev
#     dag_monitoring_airflow_schema: ci_dbt_dag_monitoring
#     dag_monitoring_databricks_database: cdi_dev
#     dag_monitoring_databricks_schema: ci_dbt_dag_monitoring
#     dag_monitoring_adf_database: cdi_dev
#     dag_monitoring_adf_schema: ci_dbt_dag_monitoring